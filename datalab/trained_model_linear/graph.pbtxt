node {
  name: "global_step/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 436
          }
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000@\315\314\314\314\314\014F@\000\000\000\000\000\200N@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@fffff\3465@\000\000\000\000\000\000G@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\000\000\000\000\000\000J@\232\231\231\231\231\371R@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\000\000\000\000\000\000J@\000\000\000\000\000\000Q@ffffff\326?\000\000\000\000\000\000\020@\315\314\314\314\314\314)@\000\000\000\000\000\200B@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\000\000\000\000\000\200P@fffff\306U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\000\000\000\000\000\000Q@\000\000\000\000\000\000V@\303\365(\\\217\302\355?\000\000\000\000\000\000\034@\232\231\231\231\231\271P@\232\231\231\231\231\371R@{\024\256G\341z\244?\000\000\000\000\000\000\034@33333\363K@\232\231\231\231\231yR@\232\231\231\231\231\231\341?\000\000\000\000\000\000\030@\315\314\314\314\314\314%@\000\000\000\000\000\000@@333333\323?\000\000\000\000\000\000\000@fffffsH@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@33333sH@\232\231\231\231\231yR@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\000\000\000\000\000\000P@\000\000\000\000\000@R@\270\036\205\353Q\270\256?\000\000\000\000\000\000\360?\000\000\000\000\000\000A@33333sH@=\n\327\243p=\362?\000\000\000\000\000\000\030@\000\000\000\000\000\000K@\000\000\000\000\000\000Q@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@\232\231\231\231\2319P@\232\231\231\231\231\271T@{\024\256G\341z\304?\000\000\000\000\000\000\000@\000\000\000\000\000\0009@\315\314\314\314\314\214J@\303\365(\\\217\302\305?\000\000\000\000\000\000\024@\000\000\000\000\000\0009@\000\000\000\000\000\200C@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\000\000\000\000\000\000R@\000\000\000\000\000@W@\n\327\243p=\n\307?\000\000\000\000\000\000\034@fffff\3465@\315\314\314\314\314\214@@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@\000\000\000\000\000\000$@33333\363B@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@33333sG@\232\231\231\231\231\371R@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@ffffffE@333333G@\303\365(\\\217\302\305?\000\000\000\000\000\000\000@33333\363K@\232\231\231\231\231\271T@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@fffff\346>@33333sG@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\232\231\231\231\231\271P@\000\000\000\000\000\000U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@33333\363B@\315\314\314\314\314\014N@\270\036\205\353Q\270\236?\000\000\000\000\000\000\020@ffffff\030@33333\363B@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\315\314\314\314\314\214I@fffffq=\n\327\243p\335?\000\000\000\000\000\000\010@\232\231\231\231\231\031:@\000\000\000\000\000\200C@{\024\256G\341z\244?\000\000\000\000\000\000\360?\000\000\000\000\000\000>@\000\000\000\000\000\000B@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\315\314\314\314\314\214I@\000\000\000\000\000\200O@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\315\314\314\314\314LO@\000\000\000\000\000\300S@H\341z\024\256G\351?\000\000\000\000\000\000\360?\232\231\231\231\231\271P@\232\231\231\231\231\371V@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@\000\000\000\000\000\000(@\000\000\000\000\000\000B@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\000\000\000\000\000\200C@\000\000\000\000\000\200M@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\000\000\000\000\000\200P@\000\000\000\000\000\000U@{\024\256G\341z\204?\000\000\000\000\000\000\010@\000\000\000\000\000\200C@\315\314\314\314\314\014N@{\024\256G\341z\204?\000\000\000\000\000\000\020@\000\000\000\000\000\000R@fffffFV@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\000\000\000\000\000\0009@\315\314\314\314\314\214@@{\024\256G\341z\204?\000\000\000\000\000\000\360?\000\000\000\000\000\200K@\000\000\000\000\000\200T@\303\365(\\\217\302\355?\000\000\000\000\000\000\000@fffff\3469@\315\314\314\314\314\314A@\270\036\205\353Q\270\236?\000\000\000\000\000\000\010@\315\314\314\314\314\214@@\000\000\000\000\000\000K@)\\\217\302\365(\274?\000\000\000\000\000\000\360?\000\000\000\000\000\200B@\315\314\314\314\314\214I@\354Q\270\036\205\353\351?\000\000\000\000\000\000\034@fffff\346>@\315\314\314\314\314\014E@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?33333sH@\232\231\231\231\231yR@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\232\231\231\231\231\031P@\232\231\231\231\231yR@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\315\314\314\314\314\014F@\000\000\000\000\000\000Q@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000J@\000\000\000\000\000\000Q@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@\000\000\000\000\000\200C@33333\363L@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\0005@fffff\346<@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@33333\363L@\000\000\000\000\000@S@333333\303?\000\000\000\000\000\000\024@fffff\3465@\000\000\000\000\000\000A@)\\\217\302\365(\334?\000\000\000\000\000\000\000@fffff\346<@\000\000\000\000\000\200E@\256G\341z\024\256\377?\000\000\000\000\000\000\034@\315\314\314\314\314\214I@\000\000\000\000\000\000Q@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\315\314\314\314\314\014E@\000\000\000\000\000@S@\205\353Q\270\036\205\023@\000\000\000\000\000\000\020@\000\000\000\000\000\000@@\000\000\000\000\000\200F@\024\256G\341z\024\002@\000\000\000\000\000\000\030@\000\000\000\000\000\0009@\315\314\314\314\314\014E@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\232\231\231\231\231\031P@33333sQ@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\000\000\000\000\000\000P@\000\000\000\000\000\200U@333333\303?\000\000\000\000\000\000\034@fffff\346<@33333sG@\217\302\365(\\\217\322?\000\000\000\000\000\000\000@\000\000\000\000\000\200Q@\000\000\000\000\000\000V@\244p=\n\327\243\320?\000\000\000\000\000\000\020@\000\000\000\000\000\200P@\232\231\231\231\2319U@{\024\256G\341z\204?\000\000\000\000\000\000\034@\000\000\000\000\000\000\"@\000\000\000\000\000\000;@\000\000\000\000\000\000\320?\000\000\000\000\000\000\020@\000\000\000\000\000\000B@\000\000\000\000\000\000I@\n\327\243p=\n\327?\000\000\000\000\000\000\034@\000\000\000\000\000\000I@\000\000\000\000\000\300R@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?fffff\346<@\315\314\314\314\314\214J@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000P@\000\000\000\000\000\200V@\000\000\000\000\000\000\320?\000\000\000\000\000\000\000@fffff\3463@\000\000\000\000\000\000B@\341z\024\256G\341\352?\000\000\000\000\000\000\000@\000\000\000\000\000\000B@\315\314\314\314\314\214I@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@\315\314\314\314\314\014E@\232\231\231\231\231yR@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\000\000\000\000\000\200F@\232\231\231\231\231\271P@ffffff\356?\000\000\000\000\000\000\020@\000\000\000\000\000\000R@\000\000\000\000\000@W@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@fffffFQ@\232\231\231\231\231\371V@\354Q\270\036\205\353\261?\000\000\000\000\000\000\030@\315\314\314\314\314\214I@\315\314\314\314\314\014O@q=\n\327\243p\315?\000\000\000\000\000\000\034@\000\000\000\000\000\000\010@fffff\346<@{\024\256G\341z\204?\000\000\000\000\000\000\000@33333\363K@fffff\306U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\000\000\000\000\000\000;@\315\314\314\314\314\214A@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@ffffffE@\000\000\000\000\000\000K@{\024\256G\341z\264?\000\000\000\000\000\000\360?\232\231\231\231\231\031:@\315\314\314\314\314\314A@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@\000\000\000\000\000\000H@fffffFQ@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@33333\363L@\000\000\000\000\000@R@=\n\327\243p=\332?\000\000\000\000\000\000\360?\000\000\000\000\000\000>@33333\363L@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000;@\000\000\000\000\000\000G@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\000\000\000\000\000\200N@\232\231\231\231\2319U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\000\000\000\000\000\200K@\000\000\000\000\000@R@{\024\256G\341z\204?\000\000\000\000\000\000\024@\000\000\000\000\000\200M@\000\000\000\000\000\300R@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@\000\000\000\000\000\200O@\000\000\000\000\000\300S@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\000\000\000\000\000\200O@\000\000\000\000\000\000U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?33333\363B@\000\000\000\000\000\200K@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@\232\231\231\231\231\231C@\232\231\231\231\231\231L@\000\000\000\000\000\000\320?\000\000\000\000\000\000\024@\232\231\231\231\231\0311@\000\000\000\000\000\000A@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@\000\000\000\000\000\200L@fffffFQ@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@33333\363L@fffff\306U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\000\000\000\000\000\200D@\000\000\000\000\000\200O@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\200L@\232\231\231\231\231\271T@\354Q\270\036\205\353\321?\000\000\000\000\000\000\360?\315\314\314\314\314\014F@\232\231\231\231\2319P@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@33333\363L@\000\000\000\000\000\300R@H\341z\024\256G\321?\000\000\000\000\000\000\034@\000\000\000\000\000\000J@\000\000\000\000\000\200T@{\024\256G\341z\224?\000\000\000\000\000\000\024@\000\000\000\000\000\000A@\315\314\314\314\314\214I@\037\205\353Q\270\036\361?\000\000\000\000\000\000\030@33333\363C@\000\000\000\000\000\200O@\354Q\270\036\205\353\261?\000\000\000\000\000\000\030@\000\000\000\000\000\200M@\232\231\231\231\231\371R@\354Q\270\036\205\353\301?\000\000\000\000\000\000\000@fffff\3465@\315\314\314\314\314\014E@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\000\000\000\000\000\0002@fffff\346<@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\232\231\231\231\231\271P@\000\000\000\000\000\000U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\000\000\000\000\000\000H@\000\000\000\000\000\200P@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\315\314\314\314\314\214@@\315\314\314\314\314\014N@)\\\217\302\365(\334?\000\000\000\000\000\000\034@33333sG@\000\000\000\000\000\200O@{\024\256G\341z\244?\000\000\000\000\000\000\024@\000\000\000\000\000\000;@\000\000\000\000\000\200C@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\000\000\000\000\000\000I@fffffFQ@\270\036\205\353Q\270\316?\000\000\000\000\000\000\020@fffff\306Q@fffffFV@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\000\000\000\000\000\000<@\315\314\314\314\314\214J@\000\000\000\000\000\000\360?\000\000\000\000\000\000\360?33333\363B@\000\000\000\000\000\200L@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\000\000\000\000\000\200Q@\000\000\000\000\000\000V@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\200L@\232\231\231\231\231yR@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\232\231\231\231\231\0311@\000\000\000\000\000\000A@{\024\256G\341z\204?\000\000\000\000\000\000\010@\232\231\231\231\2319P@\000\000\000\000\000\000U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\000\000\000\000\000\200D@\315\314\314\314\314\014O@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\000\000\000\000\000\200B@\315\314\314\314\314\014N@{\024\256G\341z\224?\000\000\000\000\000\000\360?\315\314\314\314\314\014N@\232\231\231\231\231yR@\037\205\353Q\270\036\365?\000\000\000\000\000\000\010@\315\314\314\314\314\314)@\000\000\000\000\000\000<@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@fffff\306Q@fffffFV@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@\000\000\000\000\000\000;@\000\000\000\000\000\200K@)\\\217\302\365(\314?\000\000\000\000\000\000\030@\000\000\000\000\000\000K@fffffFQ@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\000\000\000\000\000\000,@\315\314\314\314\314\214@@\244p=\n\327\243\320?\000\000\000\000\000\000\024@\315\314\314\314\314\214J@\000\000\000\000\000\200P@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@fffff\3465@33333\363B@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@333333>@\000\000\000\000\000\200C@\000\000\000\000\000\000\320?\000\000\000\000\000\000\010@\232\231\231\231\231\2311@fffff\346<@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\232\231\231\231\2319P@\000\000\000\000\000\200U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@fffff\306Q@\232\231\231\231\2319U@=\n\327\243p=\332?\000\000\000\000\000\000\034@\315\314\314\314\314\214I@\232\231\231\231\231\231L@\270\036\205\353Q\270\316?\000\000\000\000\000\000\020@333333.@\000\000\000\000\000\0009@\232\231\231\231\231\231\251?\000\000\000\000\000\000\034@\232\231\231\231\231\031:@\315\314\314\314\314\014F@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\000\000\000\000\000\0007@\315\314\314\314\314\214@@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\315\314\314\314\314\014E@\000\000\000\000\000\200K@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@fffff\346>@33333\363B@\270\036\205\353Q\270\236?\000\000\000\000\000\000\020@\000\000\000\000\000@R@\000\000\000\000\000@W@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\232\231\231\231\2319P@\232\231\231\231\231\271T@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\000\000\000\000\000\200Q@ffffffffff\346<@\232\231\231\231\231\231\271?\000\000\000\000\000\000\010@\000\000\000\000\000\000K@\000\000\000\000\000@R@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\000\000\000\000\000@R@\232\231\231\231\231\371V@H\341zfffffFQ@\232\231\231\231\2319U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\315\314\314\314\314\214A@\000\000\000\000\000\000G@\232\231\231\231\231\231\251?\000\000\000\000\000\000\024@\000\000\000\000\000\000<@\000\000\000\000\000\000I@\000\000\000\000\000\000\320?\000\000\000\000\000\000\010@\315\314\314\314\314\014F@\000\000\000\000\000\000P@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\000\000\000\000\000\0003@\000\000\000\000\000\000K@ffffff\326?\000\000\000\000\000\000\010@\000\000\000\000\000\000R@fffff\306U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\000\000\000\000\000\000B@\000\000\000\000\000\200M@{\024\256G\341z\224?\000\000\000\000\000\000\030@\000\000\000\000\000\0003@\315\314\314\314\314\014F@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@\000\000\000\000\000\200Q@\000\000\000\000\000\200U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?fffff\306Q@\000\000\000\000\000\000V@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\200P@\000\000\000\000\000\200U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000H@\232\231\231\231\231\371R@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@\000\000\000\000\000\000K@fffffFQ@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\000\000\000\000\000\000G@\000\000\000\000\000\000P@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@fffff\3463@\000\000\000\000\000\000>@\315\314\314\314\314\314\334?\000\000\000\000\000\000\010@\315\314\314\314\314\014O@\232\231\231\231\2319U@\232\231\231\231\231\231\251?\000\000\000\000\000\000\360?\315\314\314\314\314\014E@\232\231\231\231\2319P@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@fffff\346>@33333\363B@{\024\256G\341z\204?\000\000\000\000\000\000\000@\315\314\314\314\314\014F@\232\231\231\231\2319P@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?fffff\346<@\000\000\000\000\000\000H@{\024\256G\341z\204?\000\000\000\000\000\000\020@\000\000\000\000\000\200E@\232\231\231\231\2319P@{\024\256G\341z\204?\000\000\000\000\000\000\010@\000\000\000\000\000\000B@33333sH@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\000\000\000\000\000\000R@\000\000\000\000\000\000V@=\n\327\243p=\342?\000\000\000\000\000\000\030@\000\000\000\000\000\0007@\000\000\000\000\000\000A@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\232\231\231\231\231\271P@fffff\306U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@fffff\3465@\000\000\000\000\000\000G@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\315\314\314\314\314\214A@\000\000\000\000\000\200F@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@33333sG@fffff\306Q@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@333333\017@\000\000\000\000\000\000<@)\\\217\302\365(\274?\000\000\000\000\000\000\024@\315\314\314\314\314\014E@\232\231\231\231\231\271P@\232\231\231\231\231\231\271?\000\000\000\000\000\000\360?\000\000\000\000\000\200F@\000\000\000\000\000\000P@\270\036\205\353Q\270\256?\000\000\000\000\000\000\360?\315\314\314\314\314\214J@\000\000\000\000\000\200T@{\024\256G\341z\204?\000\000\000\000\000\000\360?\315\314\314\314\314\214A@\000\000\000\000\000\000H@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\000\000\000\000\000\000P@\000\000\000\000\000\200T@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@\000\000\000\000\000@R@\000\000\000\000\000\300V@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@\000\000\000\000\000\200L@fffff\306Q@\354Q\270\036\205\353\261?\000\000\000\000\000\000\360?\000\000\000\000\000\200E@\315\314\314\314\314\014O@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@fffffFQ@\232\231\231\231\2319U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@\232\231\231\231\231\0311@\315\314\314\314\314\214@@\270\036\205\353Q\270\256?\000\000\000\000\000\000\010@\000\000\000\000\000\0009@\000\000\000\000\000\200F@\315\314\314\314\314\314\334?\000\000\000\000\000\000\000@\000\000\000\000\000\000P@\232\231\231\231\231\271T@{\024\256G\341z\204?\000\000\000\000\000\000\024@\000\000\000\000\000\000H@\000\000\000\000\000\000P@\244p=\nfffffFV@\270\036\205\353Q\270\346?\000\000\000\000\000\000\010@\000\000\000\000\000\000P@\000\000\000\000\000\000V@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\315\314\314\314\314\314)@\000\000\000\000\000\0007@\232\231\231\231\231\231\251?\000\000\000\000\000\000\010@\232\231\231\231\231\0318@\315\314\314\314\314\014F@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?33333\363L@\000\000\000\000\000@S@\341zn\327\243p=\n\373?\000\000\000\000\000\000\030@\000\000\000\000\000\200C@\000\000\000\000\000\200O@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\315\314\314\314\314\214I@\000\000\000\000\000\000Q@{\024\256G\341z\324?\000\000\000\000\000\000\360?\000\000\000\000\000\000P@\000\000\000\000\000@S@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@\000\000\000\000\000\0007@\315\314\314\314\314\014N@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@33333\363C@\000\000\000\000\000\200L@{\024\256G\341z\304?\000\000\000\000\000\000\010@\000\000\000\000\000\000R@\232\231\231\231\231\371V@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@\000\000\000\000\000\200Q@\232\231\231\231\2319U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@33333sH@\232\231\231\231\231\271P@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@fffff\306Q@fffffFV@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\000\000\000\000\000\200K@\000\000\000\000\000\200T@{\024\256G\341z\204?\000\000\000\000\000\000\030@\000\000\000\000\000\200O@\000\000\000\000\000\300S@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@\315\314\314\314\314\014O@fffff\006T@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@333333 @\315\314\314\314\314\214@@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@\000\000\000\000\000\000J@\232\231\231\231\231yR@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@\000\000\000\000\000\200P@fffff\306U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@333333.@\000\000\000\000\000\200D@R\270\036\205\353Q\330?\000\000\000\000\000\000\010@33333sH@\000\000\000\000\000\000R@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\000\000\000\000\000\0009@33333\363C@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@333333>@\000\000\000\000\000\200B@{\024\256G\341z\224?\000\000\000\000\000\000\034@333333.@\000\000\000\000\000\000>@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\232\231\231\231\231\0318@33333sG@\\\217\302\365(\\\347?\000\000\000\000\000\000\030@\000\000\000\000\000\000\"@33333\363C@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\000\000\000\000\000\000B@\315\314\314\314\314\214J@R\270\036\205\353Q\310?\000\000\000\000\000\000\024@\000\000\000\000\000\200E@\000\000\000\000\000\200O@\270\036\205\353Q\270\346?\000\000\000\000\000\000\024@\000\000\000\000\000\0007@\315\314\314\314\314\014E@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@33333\363B@\315\314\314\314\314\214J@\270\036\205\353Q\270\236?\000\000\000\000\000\000\360?\232\231\231\231\2319P@\000\000\000\000\000\000U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@\000\000\000\000\000\200L@\000\000\000\000\000\000Q@{\024\256G\341z\204?\000\000\000\000\000\000\000@\000\000\000\000\000\000>@\000\000\000\000\000\200K@H\341z\024\256G\321?\000\000\000\000\000\000\360?\315\314\314\314\314\314)@\000\000\000\000\000\000B@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@fffff\3463@\000\000\000\000\000\200C@{\024\256G\341z\204?\000\000\000\000\000\000\020@\000\000\000\000\000\000I@\232\231\231\231\231\271P@\354Q\270\036\205\353\261?\000\000\000\000\000\000\034@33333\363K@\232\231\231\231\231\371R@\270\036\205\353Q\270\236?\000\000\000\000\000\000\010@\000\000\000\000\000\000I@33333\363L@\024\256G\341z\024\336?\000\000\000\000\000\000\020@33333sG@\000\000\000\000\000\200P@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@\315\314\314\314\314\214J@\000\000\000\000\000\300R@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\315\314\314\314\314\214J@\000\000\000\000\000\200Q@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@33333sG@\000\000\000\000\000\200Q@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000I@\000\000\000\000\000\300S@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@\000\000\000\000\000\200K@\232\231\231\231\231yR@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\232\231\231\231\2319P@\232\231\231\231\231\371R@\270\036\205\353Q\270\276?\000\000\000\000\000\000\030@\000\000\000\000\000\200F@\000\000\000\000\000\200M@\341zfffffFV@\270\036\205\353Q\270\276?\000\000\000\000\000\000\030@\000\000\000\000\000\000K@\000\000\000\000\000\300R@\270\036\205\353Q\270\236?\000\000\000\000\000\000\360?fffff\346<@\000\000\000\000\000\200K@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\000\000\000\000\000\200D@\232\231\231\231\2319P@\256G\341z\024\256\357?\000\000\000\000\000\000\020@\000\000\000\000\000@R@\000\000\000\000\000\300V@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@\000\000\000\000\000\000J@\000\000\000\000\000\200O@\n\327\243p=\n\267?\000\000\000\000\000\000\020@\315\314\314\314\314\214J@\000\000\000\000\000\000R@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000K@fffffFQ@\270\036\205\353Q\270\236?\000\000\000\000\000\000\000@\315\314\314\314\314\214I@\000\000\000\000\000\200T@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@33333\363C@\000\000\000\000\000\200P@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\000\000\000\000\000\200M@\232\231\231\231\231\371R@{\024\256G\341z\204?\000\000\000\000\000\000\024@fffff\346>@\315\314\314\314\314\214J@\256G\341z\024\256\357?\000\000\000\000\000\000\020@\000\000\000\000\000\000;@\000\000\000\000\000\200F@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\000\000\000\000\000\000I@\000\000\000\000\000\000Q@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\000\000\000\000\000\000A@\000\000\000\000\000\200O@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\315\314\314\314\314\214I@\232\231\231\231\231\371R@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?fffffsH@ffffff\346?\000\000\000\000\000\000\024@\315\314\314\314\314\214I@\000\000\000\000\000\200M@\000\000\000\000\000\000\360?\000\000\000\000\000\000\030@33333sG@\000\000\000\000\000\000P@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\000\000\000\000\000\200M@\000\000\000\000\000\200T@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\000\000\000\000\000\000;@\000\000\000\000\000\200K@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\232\231\231\231\2319P@fffff\006T@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@\000\000\000\000\000\0003@\000\000\000\000\000\000@@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@fffff\306Q@\000\000\000\000\000\200U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\000\000\000\000\000\0009@\000\000\000\000\000\200F@\232\231\231\231\231\231\271?\000\000\000\000\000\000\034@\000\000\000\000\000\200C@\000\000\000\000\000\000K@\303\365(\\\217\302\305?\000\000\000\000\000\000\034@\315\314\314\314\314LF@\000\000\000\000\000\000P@ffffff\346?\000\000\000\000\000\000\034@\315\314\314\314\314\214J@\000\000\000\000\000\300S@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010@\000\000\000\000\000\000A@\315\314\314\314\314\014E@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\315\314\314\314\314\214I@\000\000\000\000\000\000Q@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\315\314\314\314\314\214J@\000\000\000\000\000\200Q@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\000\000\000\000\000\000@@33333sG@=\n\327\243p=\352?\000\000\000\000\000\000\360?\000\000\000\000\000\200P@\000\000\000\000\000\300V@\341z\024\256G\341\312?\000\000\000\000\000\000\024@\232\231\231\231\231\271P@\000\000\000\000\000\000U@{\024\256G\341z\224?\000\000\000\000\000\000\024@\000\000\000\000\000\000@@33333sG@\232\231\231\231\231\231\251?\000\000\000\000\000\000\000@\315\314\314\314\314\214A@\000\000\000\000\000\000K@{\024\256G\341z\224?\000\000\000\000\000\000\024@fffffFQ@\000\000\000\000\000\000U@\354Q\270\036\205\353\261?\000\000\000\000\000\000\034@\000\000\000\000\000\200N@\000\000\000\000\000\200T@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\000\000\000\000\000\000Q@\000\000\000\000\000\000V@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\000\000\000\000\000\200L@\000\000\000\000\000@S@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@\000\000\000\000\000\000$@\315\314\314\314\314\214@@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?33333\363K@\000\000\000\000\000@T@{\024\256G\341z\224?\000\000\000\000\000\000\000@33333sH@\000\000\000\000\000\200P@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@\000\000\000\000\000\200F@\000\000\000\000\000\200K@\232\231\231\231\231\231\251?\000\000\000\000\000\000\020@fffff\3465@\000\000\000\000\000\200C@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\000\000\000\000\000\0000@\000\000\000\000\000\200B@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\000>@\000\000\000\000\000\200K@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@\315\314\314\314\314\214A@33333sG@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\315\314\314\314\314\014F@\000\000\000\000\000\000P@\205\353Q\270\036\205\343?\000\000\000\000\000\000\034@\000\000\000\000\000\000K@fffff\306Q@H\341z\024\256G\371?\000\000\000\000\000\000\000@\315\314\314\314\314\214A@\315\314\314\314\314\214J@R\270\036\205\353Q\340?\000\000\000\000\000\000\020@\000\000\000\000\000\200K@fffffFQ@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?fffffFQ@fffff\306U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\232\231\231\231\2319P@fffff\006T@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\000\000\000\000\000\000@@\000\000\000\000\000\200L@\232\231\231\231\231\231\251?\000\000\000\000\000\000\020@\315\314\314\314\314\214A@33333sG@\270\036\205\353Q\270\276?\000\000\000\000\000\000\030@fffff\346<@\315\314\314\314\314\014E@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@33333\263B@fffff\346I@\341z\024\256G\341\312?\000\000\000\000\000\000\020@\000\000\000\000\000\000,@33333\363C@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\232\231\231\231\2319P@fffff\206S@\n\327\243p=\n\347?\000\000\000\000\000\000\034@\000\000\000\000\000\000P@\000\000\000\000\000\300S@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@33333\263K@\232\231\231\231\231\371R@{\024\256G\341zfffff\346I@\315\314\314\314\314\014O@\244p=\n\327\243\300?\000\000\000\000\000\000\020@\315\314\314\314\314\014O@\232\231\231\231\2319U@\270\036\205\353Q\270\256?\000\000\000\000\000\000\030@33333sG@fffff\306Q@{\024\256G\341z\264?\000\000\000\000\000\000\034@fffff\346<@\000\000\000\000\000\200B@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@\315\314\314\314\314\214@@\000\000\000\000\000\000G@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\232\231\231\231\231\271P@\000\000\000\000\000\200U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@fffff\346@@\315\314\314\314\314\214J@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@fffff\346@@33333sG@{\024\256G\341z\224?\000\000\000\000\000\000\034@33333\363C@\000\000\000\000\000\200K@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\315\314\314\314\314\214I@\000\000\000\000\000\300R@\354Q\270\036\205\353\301?\000\000\000\000\000\000\010@\000\000\000\000\000\200B@\232\231\231\231\2319P@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\200N@\000\000\000\000\000\300S@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\315\314\314\314\314\314%@\000\000\000\000\000\000@@{\024\256G\341z\204?\000\000\000\000\000\000\034@\000\000\000\000\000\000P@\232\231\231\231\2319U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@33333\363L@\000\000\000\000\000@R@\270\036\205\353Q\270\236?\000\000\000\000\000\000\034@33333\363K@\000\000\000\000\000\300R@{\024\256G\341z\204?\000\000\000\000\000\000\030@\000\000\000\000\000\000<@\000\000\000\000\000\000G@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@\000\000\000\000\000\000P@fffff\006T@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\200K@fffff\306Q@R\270\036\205\353Q\310?\000\000\000\000\000\000\034@\232\231\231\231\231\0311@\315\314\314\314\314\014E@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\232\231\231\231\2319P@\000\000\000\000\000\000U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@33333\363B@33333sG@\n\327\243p=\n\267?\000\000\000\000\000\000\010@333333\017@\000\000\000\000\000\000B@\270\036\205\353Q\270\316?\000\000\000\000\000\000\024@fffff\306Q@\000\000\000\000\000\200U@\354Q\270\036\205\353\261?\000\000\000\000\000\000\010@33333sfffff\346<@\000\000\000\000\000\200L@\244p=\n\327\243\300?\000\000\000\000\000\000\030@\232\231\231\231\231\271P@\000\000\000\000\000\200T@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@fffffFQ@\000\000\000\000\000\200V@\217\302\365(\\\217\322?\000\000\000\000\000\000\360?\000\000\000\000\000\200L@\000\000\000\000\000@S@{\024\256G\341z\204?\000\000\000\000\000\000\034@\232\231\231\231\231\031:@33333\363K@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@\000\000\000\000\000\000B@\000\000\000\000\000\000H@\232\231\231\231\231\231\311?\000\000\000\000\000\000\010@\000\000\000\000\000\000A@\000\000\000\000\000\200K@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020@\000\000\000\000\000\200N@\000\000\000\000\000\300R@{\024\256G\341z\244?\000\000\000\000\000\000\360?\000\000\000\000\000\0002@\000\000\000\000\000\000;@{\024\256G\341z\224?\000\000\000\000\000\000\034@\000\000\000\000\000\000Q@\000\000\000\000\000\200T@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@\315\314\314\314\314\014O@\232\231\231\231\231\371R@\341z\024\256G\341\366?\000\000\000\000\000\000\030@33333\363B@\000\000\000\000\000\200L@\244p=\n\327\243\340?\000\000\000\000\000\000\360?\000\000\000\000\000\000Q@fffff\306U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@\000\000\000\000\000\200K@\000\000\000\000\000\300R@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\232\231\231\231\2319P@fffff\306U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\000\000\000\000\000\000I@\232\231\231\231\231yfffff\306U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030@\000\000\000\000\000\000P@\000\000\000\000\000\000U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@fffff{\024\256G\341z\264?\000\000\000\000\000\000\024@\000\000\000\000\000\0005@\000\000\000\000\000\200D@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034@\000\000\000\000\000\200B@\000\000\000\000\000\200O@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@\232\231\231\231\231\0311@\000\000\000\000\000\000A@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360?\000\000\000\000\000\200Q@fffff{\024\256G\341z\224?\000\000\000\000\000\000\360?\315\314\314\314\314\014E@\000\000\000\000\000\000H@\303\365(\\\217\302\305?\000\000\000\000\000\000\000@\232\231\231\231\2319P@\000\000\000\000\000\000U@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024@fffffp=\n\327\243\350?\000\000\000\000\000\000\034@\000\000\000\000\000\000<@33333\363C@\037\205\353Q\270\036\345?"
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 436
          }
          dim {
            size: 1
          }
        }
        tensor_content: "W&\374R?o\330?=a\211\007\224M\340?\302i\301\213\276\202\341?m\250\030\347oB\337?\256\365EB[\316\327?\032Q\332\033|a\326?\317k\354\022\325[\327?\007%\314\264\375+\341?\030x\356=\\r\347?\337\375\361^\2652\301?F_A\232\261h\326?\017\177M\326\250\207\326?1_^\200}t\347?e\245I)\350\366\324?-\225\267#\234\026\330?J\3225\223o\266\335?o\365\234\364\276\361\333?\201&\302\206\247W\342?\2760\231*\030\225\332?W\225}W\004\377\342?<\210\235)t^\344?c\234\277\t\205\010\336?\343\302\201\220,`\312?^K\310\007=\233\335?&p\353n\236\352\326?X\305\033\231G\376\334?\231G\376`\340\271\337?\202\312\370\367\031\027\341?\216@\274\256_\260\337?)\\\217\302\365(\334?\232B\3475v\211\344?\313\326\372\"\241-\325?\331=yX\2505\342?\003CV\267zN\340?K\352\0044\0216\332?\251\366\351x\314@\335?28J^\235c\320?\330\266(\263A&\342?e\344,\354i\207\341?\245\332\247\3431\003\333?\376++MJA\335?al!\310A\t\343?\204\323\202\027}\005\333?0G\217\337\333\364\335?\320a\276\274\000\373\336?\035\217\031\250\214\177\345?Q\203i\030>\"\330?\213\246\263\223\301Q\326?\330\273?\336\253V\336?j\336q\212\216\344\330?\0221%\222\350e\310?P\215\227n\022\203\340?\271\374\207\364\333\327\333?To\rl\225`\340?\007\3230|DL\343??:u\345\263<\341?\032\250\214\177\237q\335?\3603.\034\010\311\330?\210\235)t^c\331?\373?\207\371\362\002\341?\332\346\306\364\204%\341?R\270\036\205\353Q\326?\301\034=~o\323\337?\323\207.\250o\231\325?\331Z_$\264\345\326?}\313\234.\213\211\344?\273\355Bs\235F\334?\022k\361)\000\306\337?w\241\271N#-\343?\253!q\217\245\017\340?\2402\376}\306\205\331?H3\026Mg\'\346?\371,\317\203\273\263\322?\233\254Q\017\321\350\336?\023\n\021p\010U\316?\331%\252\267\006\266\316?\022\024?\306\334\265\344?b\326\213\241\234h\335?Wx\227\213\370N\343?\371\017\351\267\257\003\333?\246\233\304 \260r\334?\354\335\037\357U+\337?\317,\tPS\313\334?O\257\224e\210c\327?t^c\227\250\336\336?K\002\324\324\262\265\341?K\315\036h\005\206\344?\010wg\355\266\013\327?\2279]\026\023\233\345?\201C\250R\263\007\342?p_\007\316\031Q\312?\321?\301\305\212\032\352?\177\366#EdX\331?\206\311T\301\250\244\334?\240\025\030\262\272\325\343?:z\374\336\246?\331?\236$]3\371f\331?\000\256d\307F \334?\0265\230\206\341#\342?\207\304=\226>t\333?\270\222\035\033\201x\331?\240\303|y\001\366\342?5{\240\025\030\262\336? \322o_\007\316\340?~R\355\323\361\230\340?\355\201V`\310\352\324?5\322Ry;\302\343?\007\010\346\350\361{\343?\3441\003\225\361\357\333?\363\223j\237\216\307\342?\363\216St$\227\340?\020@j\023\'\367\327?\321\\\247\221\226\312\340?\211^F\261\334\322\326?~\343k\317,\t\326?e\337\025\301\377V\332?N\013^\364\025\244\331?\333\277\262\322\244\024\340?\032i\251\274\035\341\345?\207\341#bJ$\344?DL\211$z\031\340?W&\374R?o\330?\231\330|\\\033*\336?C\312O\252}:\341?\260 \315X4\235\331?\265\211\223\373\035\212\344?j\301\213\276\2024\333?]3\371f\233\033\325?\363<\270;k\267\331?\276\2441ZGU\341?\263\322\244\024t{\341?\211$z\031\305r\321?\344\017\006\236{\017\327?\030>\"\246D\022\323?\0015\265l\255/\341?\271S:X\377\347\336?\243\351\354dp\224\341?\222?\030x\356=\326?\200\237q\341@H\334?Ou\310\315p\003\332?\017\177M\326\250\207\334?9\271\337\241(\320\327?\235\235\014\216\222W\347?\362^\2652\341\227\336?\244\337\276\016\2343\332?\215\264T\336\216p\326?<\275R\226!\216\333?h\320\320?\301\305\344?\323\244\024t{I\331?V+\023~\251\237\327?\210c]\334F\003\332?\316\215\351\tK<\341?\245I)\350\366\222\330?!\352>\000\251M\330?\301\213\276\2024c\347?\306\026\202\034\2240\323?{Ic\264\216\252\330?nLOX\342\001\327?\001\366\321\251+\237\341?E\273\n)?\251\345?\003[%X\034\316\341?(\270XQ\203i\334?\315#\1770\360\334\331?\r\246a\370\210\230\340?\236\014\216\222W\347\334?\362\014\032\372\'\270\326?\270@\202\342\307\230\331?\2279]\026\023\233\333?\005\305\2171w-\327?\347R\\U\366]\327?\273\270\215\006\360\026\336?y]\277`7l\341?\356\316\332m\027\232\335?\274\"\370\337Jv\344?\335\230\236\260\304\003\345?\322:\252\232 \352\343?\266-\312l\220I\326?\325\225\317\362<\270\303?\321\350\016bg\n\335?\014v\303\266E\231\335?\306m4\200\267@\336?\"q\217\245\017]\334?y\036\334\235\265\333\343?Pp\261\242\006\323\330?\273\320\\\247\221\226\336?\275\251H\205\261\205\330?\303G\304\224H\242\321?\346Ws\200`\216\326?\235\205=\355\360\327\336?\274\226\220\017z6\343?\"\216uq\033\r\330?\215\227n\022\203\300\332?\323\023\226x@\331\341?*Wx\227\213\370\336?\374\214\013\007B\262\344?#\241-\347R\\\342?\016\333\026e6\310\326?\257\261KTo\r\343?\215\227n\022\203\300\340?\\ A\361c\314\342? $\013\230\300\255\342?\202\342\307\230\273\226\344?\263{\362\260Pk\336?\266J\2608\234\371\325?l>\256\r\025\343\336?\303\323+e\031\342\343?5c\321tv2\350?\024\\\254\250\3014\330?\375j\016\020\314\321\313?\014\007B\262\200\t\336?<\024\005\372D\236\332?\371\024\000\343\0314\330?\347\214(\355\r\276\322?\250\035\376\232\254Q\335?\344\275je\302/\340?N\177\366#Ed\326?\036m\034\261\026\237\334?\256\r\025\343\374M\326?g\362\31567\246\325?\002Hm\342\344~\340?\273D\365\326\300V\343?\017\356\316\332m\027\334?\224M\271\302\273\\\336?%\257\3161 {\335?\306\277\317\270p \340?;\215\264T\336\216\336?\277Hh\313\271\024\335?\2034c\321tv\334?_\230L\025\214J\330?\223W\347\030\220\275\336?\272I\014\002+\207\336?\021p\010Uj\366\347?\365-s\272,&\341?\327i\244\245\362v\344?z\245,C\034\353\341?\245k&\337ls\344?u\037\200\324&N\334?\337\025\301\377V\262\333?;\031\034%\257\316\341?M\241\363\032\273D\350?\333\247\3431\003\225\340?\022\210\327\365\013v\346?\265O\307c\006*\337?\275\030\312\211v\025\330?\336\002\t\212\037c\332?\277Hh\313\271\024\342?\230i\373WV\232\340?Z\236\007wg\355\340?\353n\236\352\220\233\315?\007\266J\2608\234\342?\351\267\257\003\347\214\326?\366]\021\374o%\340?w\241\271N#-\343?}\\\033*\306\371\337?,+MJA\267\333?\300\262\322\244\024t\343?\207\247W\3122\304\337?\302Q\362\352\034\003\341?\376\016E\201>\221\344?\355\273\"\370\337J\343?\242\2647\370\302d\336?\031\220\275\336\375\361\342?\277\2024c\321t\350?UM\020u\037\200\334?\365\234\364\276\361\265\344?\005\300x\006\r\375\325?\377x\257Z\231\360\335?B>\350\331\254\372\340?\2608\234\371\325\034\336?\370\245~\336T\244\320?\032i\251\274\035\341\326?\262\205 \007%\314\330?vq\033\r\340-\341?M-[\353\213\204\341?\251\336\032\330*\301\326?\327\335<\325!7\333?v\246\320y\215]\340?\002Hm\342\344~\333?\247\005/\372\n\322\336?\323\301\372?\207\371\334?\367\314\222\0005\265\340?t\230//\300>\334?JA\267\2274F\331?\024\263^\014\345D\331?\014<\367\036.9\330?\366\321\251+\237\345\341?\340\271\367p\311q\337?\307\327\236Y\022\240\332?g\233\033\323\023\226\336?O@\023a\303\323\303?\273a\333\242\314\006\340?\036\026jM\363\216\345?v\032i\251\274\035\323?M\204\rO\257\224\327?\335\315S\035r3\347?e\001\023\270u7\337?<\203\206\376\t.\345?k\237\216\307\014T\330?*\251\023\320D\330\334?\272N#-\225\267\327?m\305\376\262{\362\345?|\n\200\361\014\032\340?Bx\264q\304Z\324?\355\273\"\370\337J\342?\326\213\241\234hW\343?\002Hm\342\344~\347?s\021\337\211Y/\332?\354\022\325[\003[\331?\270\344\270S:X\327?\215b\271\245\325\220\330?\302/\365\363\246\"\337?\036\033\201x]\277\340?\003\354\243SW>\333?S\"\211^F\261\334?\265T\336\216pZ\332?\235\205=\355\360\327\342?\306\334\265\204|\320\333?\317N\006G\311\253\331?\037\327\206\212q\376\336?\3745Y\243\036\242\335?\353\305PN\264\253\326? $\013\230\300\255\350?Z/\206r\242]\337?\260\003\347\214(\355\331?\314\264\375++M\326?2\217\374\301\300s\335?/\206r\242]\205\332?\023a\303\323+e\342?K\253!q\217\245\333?7\216X\213O\001\334?\332 \223\214\234\205\335?\014\310^\357\376x\335?\230\372yS\221\n\341?\315;N\321\221\\\336?j\207\277&k\324\343?\247\005/\372\n\322\346?\342;1\353\305P\336?\273\n)?\251\366\335?\002\274\005\022\024?\341?I.\377!\375\366\335?\225}W\004\377[\323?\243uT5A\324\333?%u\002\232\010\033\343?H\0260\201[w\331?fI\200\232Z\266\347?\"O\222\256\231|\331?\006\365-s\272,\343?\214\370N\314z1\332?H\212\310\260\2127\343?a\216\036\277\267\351\337?\350j+\366\227\335\323?\200}t\352\312g\337?+0du\253\347\341?]\371,\317\203\273\331?\313\370\367\031\027\016\336?\250\3431\003\225\361\333?#\241-\347R\\\325?\260 \315X4\235\337?\r\246a\370\210\230\344?D\206U\274\221y\345?\313\363\340\356\254\335\334?\303d\252`TR\350?\023\270u7Ou\343?\364\375\324x\351&\337?\222\"2\254\342\215\340?X\342\001eS\256\344?\271\031n\300\347\207\327?\017\2343\242\2647\340?\3706\375\331\217\024\315?\325x\351&1\010\334?\'\203\243\344\3259\334?\255Q\017\321\350\016\316?6\253>W[\261\327?\247\263\223\301Q\362\334?\272\203\330\231B\347\335?\237\310\223\244k&\350?\333\205\346:\215\264\345?j\366@+0d\340?\024\"\340\020\252\324\332?\325\th\"lx\334?w\370k\262F=\334?|,}\350\202\372\336?\270\351\317~\244\210\340?+\331\261\021\210\327\342?>\350\331\254\372\\\340?\351\016bg\n\235\331?K\2608\234\371\325\322?\251\274\035\341\264\340\340?\263\265\276Hh\313\342?\211\357\304\254\027C\344?\214\326Q\325\004Q\344?\213\340\177+\331\261\340?\226\225&\245\240\333\331?!<\3328b-\326?\351\324\225\317\362<\332?p_\007\316\031Q\336?\306\205\003!Y\300\332?\014v\303\266E\231\337?\267]h\256\323H\331?F|\'f\275\030\336?\007\266J\2608\234\343?d@\366z\367\307\333?\274\313E|\'f\344?\321\226s)\256*\331?q8\363\2539@\342?v7Ou\310\315\332?\222\"2\254\342\215\341?\245\240\333K\032\243\327?\263\007Z\201!\253\344?\271\210\357\304\254\027\325?\223R\320\355%\215\333?\311\310Y\330\323\016\335?\314(\226[Z\r\337?\'\240\211\260\341\351\341?\265\340E_A\232\341?\207\334\0147\340\363\340?\212\260\341\351\225\262\336?QN\264\253\220\362\335?\322\251+\237\345y\340?mscz\302\022\341?\215z\210Fw\020\337?\227\377\220~\373:\336?\001\366\321\251+\237\340?\374R?o*R\327?\307.Q\2755\260\341?o*Ral!\330?\337\340\013\223\251\202\341?\277+\202\377\255d\340?od\036\371\203\201\333?\006/\372\n\322\214\335?8gDio\360\340?\334F\003x\013$\342?\306\371\233P\210\200\335?<\210\235)t^\323?\260\033\266-\312l\330?\027+j0\r\303\342?"
      }
    }
  }
}
node {
  name: "linear/linear/ToFloat"
  op: "Cast"
  input: "Const"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "linear//weight/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear//weight/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear//weight/part_0/Assign"
  op: "Assign"
  input: "linear//weight/part_0"
  input: "linear//weight/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear//weight/part_0/read"
  op: "Identity"
  input: "linear//weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear//weight"
  op: "Identity"
  input: "linear//weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "matmul"
  op: "MatMul"
  input: "linear/linear/ToFloat"
  input: "linear//weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape"
  op: "Reshape"
  input: "matmul"
  input: "linear/linear/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Assign"
  op: "Assign"
  input: "linear/bias_weight/part_0"
  input: "linear/bias_weight/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bias_weight/part_0/read"
  op: "Identity"
  input: "linear/bias_weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bias_weight"
  op: "Identity"
  input: "linear/bias_weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/BiasAdd"
  op: "BiasAdd"
  input: "linear/linear/Reshape"
  input: "linear/bias_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "predictions/scores"
  op: "Squeeze"
  input: "linear/linear/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "training_loss/mean_squared_loss/ToFloat"
  op: "Cast"
  input: "Const_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training_loss/mean_squared_loss/sub"
  op: "Sub"
  input: "linear/linear/BiasAdd"
  input: "training_loss/mean_squared_loss/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training_loss/mean_squared_loss"
  op: "Square"
  input: "training_loss/mean_squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "training_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training_loss"
  op: "Mean"
  input: "training_loss/mean_squared_loss"
  input: "training_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training_loss/ScalarSummary/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "training_loss/ScalarSummary"
  op: "ScalarSummary"
  input: "training_loss/ScalarSummary/tags"
  input: "training_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train_op/gradients/Fill"
  op: "Fill"
  input: "train_op/gradients/Shape"
  input: "train_op/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/Fill"
  input: "train_op/gradients/training_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\264\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss_grad/Tile"
  op: "Tile"
  input: "train_op/gradients/training_loss_grad/Reshape"
  input: "train_op/gradients/training_loss_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\264\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss_grad/Prod"
  op: "Prod"
  input: "train_op/gradients/training_loss_grad/Shape"
  input: "train_op/gradients/training_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/training_loss_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss_grad/Prod_1"
  op: "Prod"
  input: "train_op/gradients/training_loss_grad/Shape_1"
  input: "train_op/gradients/training_loss_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/training_loss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss_grad/Maximum"
  op: "Maximum"
  input: "train_op/gradients/training_loss_grad/Prod_1"
  input: "train_op/gradients/training_loss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss_grad/floordiv"
  op: "FloorDiv"
  input: "train_op/gradients/training_loss_grad/Prod"
  input: "train_op/gradients/training_loss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss_grad/Cast"
  op: "Cast"
  input: "train_op/gradients/training_loss_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss_grad/truediv"
  op: "RealDiv"
  input: "train_op/gradients/training_loss_grad/Tile"
  input: "train_op/gradients/training_loss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss/mean_squared_loss_grad/mul/x"
  op: "Const"
  input: "^train_op/gradients/training_loss_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss/mean_squared_loss_grad/mul"
  op: "Mul"
  input: "train_op/gradients/training_loss/mean_squared_loss_grad/mul/x"
  input: "training_loss/mean_squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss/mean_squared_loss_grad/mul_1"
  op: "Mul"
  input: "train_op/gradients/training_loss_grad/truediv"
  input: "train_op/gradients/training_loss/mean_squared_loss_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss/mean_squared_loss/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\264\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss/mean_squared_loss/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\264\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss/mean_squared_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train_op/gradients/training_loss/mean_squared_loss/sub_grad/Shape"
  input: "train_op/gradients/training_loss/mean_squared_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss/mean_squared_loss/sub_grad/Sum"
  op: "Sum"
  input: "train_op/gradients/training_loss/mean_squared_loss_grad/mul_1"
  input: "train_op/gradients/training_loss/mean_squared_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/training_loss/mean_squared_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/training_loss/mean_squared_loss/sub_grad/Sum"
  input: "train_op/gradients/training_loss/mean_squared_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss/mean_squared_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "train_op/gradients/training_loss/mean_squared_loss_grad/mul_1"
  input: "train_op/gradients/training_loss/mean_squared_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/gradients/training_loss/mean_squared_loss/sub_grad/Neg"
  op: "Neg"
  input: "train_op/gradients/training_loss/mean_squared_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/training_loss/mean_squared_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "train_op/gradients/training_loss/mean_squared_loss/sub_grad/Neg"
  input: "train_op/gradients/training_loss/mean_squared_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/linear/linear/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train_op/gradients/training_loss/mean_squared_loss/sub_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train_op/gradients/linear/linear/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\264\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_op/gradients/linear/linear/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train_op/gradients/training_loss/mean_squared_loss/sub_grad/Reshape"
  input: "train_op/gradients/linear/linear/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/gradients/matmul_grad/MatMul"
  op: "MatMul"
  input: "train_op/gradients/linear/linear/Reshape_grad/Reshape"
  input: "linear//weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/gradients/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/ToFloat"
  input: "train_op/gradients/linear/linear/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train_op/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_op/beta1_power/Assign"
  op: "Assign"
  input: "train_op/beta1_power"
  input: "train_op/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/beta1_power/read"
  op: "Identity"
  input: "train_op/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train_op/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_op/beta2_power/Assign"
  op: "Assign"
  input: "train_op/beta2_power"
  input: "train_op/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/beta2_power/read"
  op: "Identity"
  input: "train_op/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear//weight/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear//weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear//weight/part_0/Adam"
  input: "train_op/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear//weight/part_0/Adam/read"
  op: "Identity"
  input: "linear//weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear//weight/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear//weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear//weight/part_0/Adam_1"
  input: "train_op/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear//weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear//weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/zeros_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/bias_weight/part_0/Adam"
  input: "train_op/zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/bias_weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/zeros_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/bias_weight/part_0/Adam_1"
  input: "train_op/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/bias_weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_op/Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "train_op/Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train_op/Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train_op/Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train_op/Adam/update_linear//weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear//weight/part_0"
  input: "linear//weight/part_0/Adam"
  input: "linear//weight/part_0/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/update_linear/bias_weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/bias_weight/part_0"
  input: "linear/bias_weight/part_0/Adam"
  input: "linear/bias_weight/part_0/Adam_1"
  input: "train_op/beta1_power/read"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/learning_rate"
  input: "train_op/Adam/beta1"
  input: "train_op/Adam/beta2"
  input: "train_op/Adam/epsilon"
  input: "train_op/gradients/linear/linear/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train_op/Adam/mul"
  op: "Mul"
  input: "train_op/beta1_power/read"
  input: "train_op/Adam/beta1"
  input: "^train_op/Adam/update_linear//weight/part_0/ApplyAdam"
  input: "^train_op/Adam/update_linear/bias_weight/part_0/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/Adam/Assign"
  op: "Assign"
  input: "train_op/beta1_power"
  input: "train_op/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/Adam/mul_1"
  op: "Mul"
  input: "train_op/beta2_power/read"
  input: "train_op/Adam/beta2"
  input: "^train_op/Adam/update_linear//weight/part_0/ApplyAdam"
  input: "^train_op/Adam/update_linear/bias_weight/part_0/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_op/Adam/Assign_1"
  op: "Assign"
  input: "train_op/beta2_power"
  input: "train_op/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_op/Adam/update"
  op: "NoOp"
  input: "^train_op/Adam/update_linear//weight/part_0/ApplyAdam"
  input: "^train_op/Adam/update_linear/bias_weight/part_0/ApplyAdam"
  input: "^train_op/Adam/Assign"
  input: "^train_op/Adam/Assign_1"
}
node {
  name: "train_op/Adam/value"
  op: "Const"
  input: "^train_op/Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "train_op/Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "train_op/Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean_squared_loss/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/mean_squared_loss/ExpandDims"
  op: "ExpandDims"
  input: "predictions/scores"
  input: "metrics/mean_squared_loss/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/mean_squared_loss/ToFloat"
  op: "Cast"
  input: "Const_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/mean_squared_loss/sub"
  op: "Sub"
  input: "metrics/mean_squared_loss/ExpandDims"
  input: "metrics/mean_squared_loss/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/mean_squared_loss"
  op: "Square"
  input: "metrics/mean_squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 436
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "metrics/eval_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "metrics/eval_loss"
  op: "Mean"
  input: "metrics/mean_squared_loss"
  input: "metrics/eval_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/total"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "metrics/mean/total/Assign"
  op: "Assign"
  input: "metrics/mean/total"
  input: "metrics/mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/mean/total/read"
  op: "Identity"
  input: "metrics/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/count"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "metrics/mean/count/Assign"
  op: "Assign"
  input: "metrics/mean/count"
  input: "metrics/mean/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/mean/count/read"
  op: "Identity"
  input: "metrics/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "metrics/mean/ToFloat_1"
  op: "Cast"
  input: "metrics/mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "metrics/mean/Sum"
  op: "Sum"
  input: "metrics/eval_loss"
  input: "metrics/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean/AssignAdd"
  op: "AssignAdd"
  input: "metrics/mean/total"
  input: "metrics/mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "metrics/mean/count"
  input: "metrics/mean/ToFloat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/mean/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/Greater"
  op: "Greater"
  input: "metrics/mean/count/read"
  input: "metrics/mean/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/truediv"
  op: "RealDiv"
  input: "metrics/mean/total/read"
  input: "metrics/mean/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/value/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/value"
  op: "Select"
  input: "metrics/mean/Greater"
  input: "metrics/mean/truediv"
  input: "metrics/mean/value/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/Greater_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/Greater_1"
  op: "Greater"
  input: "metrics/mean/AssignAdd_1"
  input: "metrics/mean/Greater_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/truediv_1"
  op: "RealDiv"
  input: "metrics/mean/AssignAdd"
  input: "metrics/mean/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "metrics/mean/update_op/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "metrics/mean/update_op"
  op: "Select"
  input: "metrics/mean/Greater_1"
  input: "metrics/mean/truediv_1"
  input: "metrics/mean/update_op/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^linear//weight/part_0/Assign"
  input: "^linear/bias_weight/part_0/Assign"
  input: "^train_op/beta1_power/Assign"
  input: "^train_op/beta2_power/Assign"
  input: "^linear//weight/part_0/Adam/Assign"
  input: "^linear//weight/part_0/Adam_1/Assign"
  input: "^linear/bias_weight/part_0/Adam/Assign"
  input: "^linear/bias_weight/part_0/Adam_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "linear//weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "train_op/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "train_op/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "linear//weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "linear//weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "metrics/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "metrics/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  attr {
    key: "N"
    value {
      i: 11
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 11
          }
        }
        string_val: "global_step"
        string_val: "linear//weight/part_0"
        string_val: "linear/bias_weight/part_0"
        string_val: "train_op/beta1_power"
        string_val: "train_op/beta2_power"
        string_val: "linear//weight/part_0/Adam"
        string_val: "linear//weight/part_0/Adam_1"
        string_val: "linear/bias_weight/part_0/Adam"
        string_val: "linear/bias_weight/part_0/Adam_1"
        string_val: "metrics/mean/total"
        string_val: "metrics/mean/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 11
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 11
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/Gather"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "linear//weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "train_op/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "train_op/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "linear//weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "linear//weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  attr {
    key: "N"
    value {
      i: 9
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 9
          }
        }
        string_val: "global_step"
        string_val: "linear//weight/part_0"
        string_val: "linear/bias_weight/part_0"
        string_val: "train_op/beta1_power"
        string_val: "train_op/beta2_power"
        string_val: "linear//weight/part_0/Adam"
        string_val: "linear//weight/part_0/Adam_1"
        string_val: "linear/bias_weight/part_0/Adam"
        string_val: "linear/bias_weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 9
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 9
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^metrics/mean/total/Assign"
  input: "^metrics/mean/count/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "training_loss/ScalarSummary"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_e528442dc4f6454db4289bf710f87cfe/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 9
          }
        }
        string_val: "global_step"
        string_val: "linear//weight"
        string_val: "linear//weight/Adam"
        string_val: "linear//weight/Adam_1"
        string_val: "linear/bias_weight"
        string_val: "linear/bias_weight/Adam"
        string_val: "linear/bias_weight/Adam_1"
        string_val: "train_op/beta1_power"
        string_val: "train_op/beta2_power"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 9
          }
        }
        string_val: ""
        string_val: "4 1 0,4:0,1"
        string_val: "4 1 0,4:0,1"
        string_val: "4 1 0,4:0,1"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "global_step"
  input: "linear//weight/part_0/read"
  input: "linear//weight/part_0/Adam/read"
  input: "linear//weight/part_0/Adam_1/read"
  input: "linear/bias_weight/part_0/read"
  input: "linear/bias_weight/part_0/Adam/read"
  input: "linear/bias_weight/part_0/Adam_1/read"
  input: "train_op/beta1_power"
  input: "train_op/beta2_power"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/control_dependency"
  input: "^save/MergeV2Checkpoints"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear//weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "4 1 0,4:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "linear//weight/part_0"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear//weight/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "4 1 0,4:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "linear//weight/part_0/Adam"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear//weight/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "4 1 0,4:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "linear//weight/part_0/Adam_1"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bias_weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "linear/bias_weight/part_0"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bias_weight/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "linear/bias_weight/part_0/Adam"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bias_weight/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "linear/bias_weight/part_0/Adam_1"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "train_op/beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "train_op/beta1_power"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "train_op/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "train_op/beta2_power"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear//weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 21
}
